package com.example.saas.devsecurity.service;

import com.example.saas.devsecurity.domain.Vulnerability;
import com.example.saas.devsecurity.repository.VulnerabilityRepository;
import lombok.extern.log4j.Log4j2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
@Log4j2
public class VulnerabilityDataServiceImpl implements  VulnerabilityDataService{

    @Autowired
    private VulnerabilityRepository vulnerabilityRepository;

   @Override
public List<Vulnerability> fetchVulnerabilities(String containerId) {
    List<Vulnerability> vulnerabilities = vulnerabilityRepository.findByContainerId(containerId);
    if (vulnerabilities.isEmpty()) { // If no vulnerabilities found in database, create some sample vulnerabilities
        Vulnerability newVulnerability = new Vulnerability("VULN-1234", "CVE-2023-12345", "Critical",
                "Sample description", "abc123", "src/main/java/VulnerableFile.java", 42, containerId);
        vulnerabilityRepository.save(newVulnerability);
        vulnerabilities.add(newVulnerability);
    } // Dummy implementation to fetch vulnerabilities from database
    return vulnerabilities;
}

    @Override
    public void storeVulnerability(Vulnerability vulnerability) {
        // Logic to store vulnerability in database (e.g., DynamoDB)
        log.info("Storing vulnerability: {}", vulnerability.getName());
        vulnerabilityRepository.save(vulnerability);
    }
}
