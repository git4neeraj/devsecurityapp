package com.example.saas.devsecurity.controller;

import com.example.saas.devsecurity.GitBlameHelper;
import com.example.saas.devsecurity.domain.Container;
import com.example.saas.devsecurity.domain.Vulnerability;
import com.example.saas.devsecurity.service.ContainerService;
import com.example.saas.devsecurity.service.GitRepositoryService;
import com.example.saas.devsecurity.service.VulnerabilityDataService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/v1/trace")
public class VulnerabilityTraceController {

    @Autowired
    private VulnerabilityDataService vulnerabilityDataService;

    @Autowired
    private GitRepositoryService gitRepositoryService;

    @Autowired
    private ContainerService containerService;

    @Autowired
    private GitBlameHelper gitBlameHelper;

   @GetMapping("/{containerId}")
   public Container traceVulnerability(@PathVariable String containerId, @RequestParam(required = false, defaultValue = "${project.root.path}") String repoPath) throws Exception {
       Container container = containerService.getContainerDetails(containerId);
       List<Vulnerability> vulnerabilities = vulnerabilityDataService.fetchVulnerabilities(containerId);
       gitBlameHelper.blameFiles(repoPath, vulnerabilities);
       return container;
   }


}